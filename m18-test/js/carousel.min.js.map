{"version":3,"sources":["carousel.js"],"names":["Carousel","constructor","carouselContainer","carousel","carouselElements","states","this","_carouselContainer","_carousel","_carouselElements","_States","counter","makeCounter","increaser","currentValue","getCurrentValue","current","set","boundButtonsClick","onButtonsClick","bind","addEventListener","evt","Buttons","target","closest","clearClassName","next","prev","getPrevSlide","getNextSlide","name","length","classList","add","inc","dec","elements","elem","removeAttribute","contains","remove","state","Array","from","indexOf","count","value","document","querySelector","querySelectorAll"],"mappings":"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","file":"carousel.min.js","sourcesContent":["class Carousel {\n  constructor({ carouselContainer, carousel, carouselElements, states }) {\n    this._carouselContainer = carouselContainer;\n    this._carousel = carousel;\n    this._carouselElements = carouselElements;\n    this._States = states;\n    this.counter = this.makeCounter();\n    this.increaser = this.makeCounter();\n    this.currentValue = this.getCurrentValue(\n      this._States.current,\n      this._carouselElements\n    );\n    this.counter.set(this.currentValue);\n\n    this.boundButtonsClick = this.onButtonsClick.bind(this);\n    this._carouselContainer.addEventListener(\"click\", this.boundButtonsClick);\n  }\n\n  onButtonsClick(evt) {\n    const Buttons = {\n      prev: evt.target.closest(\".slide-button-prev\"),\n      next: evt.target.closest(\".slide-button-next\"),\n    };\n\n    if (!Buttons.prev && !Buttons.next) return;\n\n    if (Buttons.prev) {\n      this.clearClassName(this._States.next);\n      this.clearClassName(this._States.prev);\n      this.clearClassName(this._States.current);\n      this.getPrevSlide(this._States.current);\n    }\n\n    if (Buttons.next) {\n      this.clearClassName(this._States.next);\n      this.clearClassName(this._States.prev);\n      this.clearClassName(this._States.current);\n      this.getNextSlide(this._States.current);\n    }\n  }\n\n  getNextSlide(name) {\n    this.increaser.set(this.counter() - 1);\n    if (this.counter() >= this._carouselElements.length - 1) {\n      this._carouselElements[this.counter.set(this.currentValue)].classList.add(\n        name\n      );\n      this._carouselElements[\n        this.increaser.set(this._carouselElements.length - 1)\n      ].classList.add(this._States.prev);\n    } else {\n      this._carouselElements[this.counter.inc()].classList.add(name);\n      this._carouselElements[this.increaser.inc()].classList.add(\n        this._States.prev\n      );\n    }\n  }\n\n  getPrevSlide(name) {\n    this.increaser.set(this.counter() + 1);\n    if (this.counter() <= this.currentValue) {\n      this._carouselElements[\n        this.counter.set(this._carouselElements.length - 1)\n      ].classList.add(name);\n      this._carouselElements[\n        this.increaser.set(this.currentValue)\n      ].classList.add(this._States.next);\n    } else {\n      this._carouselElements[this.increaser.dec()].classList.add(\n        this._States.next\n      );\n      this._carouselElements[this.counter.dec()].classList.add(name);\n    }\n  }\n\n  clearClassName(name, elements = this._carouselElements) {\n    for (const elem of elements) {\n      elem.removeAttribute(\"class\");\n\n      if (elem.classList.contains(name)) {\n        elem.classList.remove(name);\n      }\n    }\n  }\n\n  getCurrentValue(state, elements) {\n    let current;\n    for (const elem of elements) {\n      if (elem.classList.contains(state)) {\n        current = elem;\n      }\n    }\n    return Array.from(elements).indexOf(current);\n  }\n\n  makeCounter() {\n    let count = 0;\n    const counter = () => {\n      return count;\n    };\n\n    counter.inc = () => ++count;\n    counter.dec = () => --count;\n    counter.set = (value) => (count = value);\n    return counter;\n  }\n}\n\nconst carousel = new Carousel({\n  carouselContainer: document.querySelector(\".carousel\"),\n  carousel: document.querySelector(\".carousel-list\"),\n  carouselElements: document.querySelectorAll(\".carousel-list li\"),\n  states: {\n    current: \"current\",\n    prev: \"prev\",\n    next: \"next\",\n  },\n});\n"]}