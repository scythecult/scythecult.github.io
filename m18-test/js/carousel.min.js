"use strict";class Carousel{constructor({carouselContainer:t,carousel:s,carouselElements:e,states:r}){this._Slide={START:0,POSITION:1},this._carouselContainer=t,this._carousel=s,this._carouselElements=e,this._States=r,this.counter=this.makeCounter(),this.increaser=this.makeCounter(),this.currentValue=this.getCurrentValue(this._States.current,this._carouselElements),this.counter.set(this.currentValue),this.boundButtonsClick=this.onButtonsClick.bind(this),this._carouselContainer.addEventListener("click",this.boundButtonsClick)}onButtonsClick(t){const s=t.target.closest(".slide-button-prev"),e=t.target.closest(".slide-button-next");(s||e)&&(s&&(this.clearClassName(this._States.next),this.clearClassName(this._States.prev),this.clearClassName(this._States.current),this.getPrevSlide(this._States.current)),e&&(this.clearClassName(this._States.next),this.clearClassName(this._States.prev),this.clearClassName(this._States.current),this.getNextSlide(this._States.current)))}getNextSlide(t){this.increaser.set(this.counter()-this._Slide.POSITION),this.counter()>=this._carouselElements.length-1?(this._carouselElements[this.counter.set(this._Slide.START)].classList.add(t),this._carouselElements[this.increaser.set(this._carouselElements.length-1)].classList.add(this._States.prev)):(this._carouselElements[this.counter.inc()].classList.add(t),this._carouselElements[this.increaser.inc()].classList.add(this._States.prev))}getPrevSlide(t){this.increaser.set(this.counter()+this._Slide.POSITION),this.counter()<=0?(this._carouselElements[this.counter.set(this._carouselElements.length-1)].classList.add(t),this._carouselElements[this.increaser.set(this._Slide.START)].classList.add(this._States.next)):(this._carouselElements[this.increaser.dec()].classList.add(this._States.next),this._carouselElements[this.counter.dec()].classList.add(t))}clearClassName(t,s=this._carouselElements){for(const e of s)e.removeAttribute("class"),e.classList.contains(t)&&e.classList.remove(t)}getCurrentValue(t,s){let e;for(const r of s)r.classList.contains(t)&&(e=r);return Array.from(s).indexOf(e)}makeCounter(){let t=0;const s=()=>t;return s.inc=()=>++t,s.dec=()=>--t,s.set=s=>t=s,s}}const carousel=new Carousel({carouselContainer:document.querySelector(".carousel"),carousel:document.querySelector(".carousel-list"),carouselElements:document.querySelectorAll(".carousel-list li"),states:{current:"current",prev:"prev",next:"next"}});
//# sourceMappingURL=carousel.min.js.map
